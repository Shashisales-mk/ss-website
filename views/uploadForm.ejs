<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Blog Form - Seo Company in Delhi-NCR India - Shashi Sales</title>
    <meta name="description" content="Boost your online presence with Shashi Sales and Marketing, the top SEO company in Delhi-NCR India. Drive traffic and enhance your brand visibility today!" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/quill/2.0.2/quill.snow.css"
        integrity="sha512-ggYQiYwuFFyThzEv6Eo6g/uPLis4oUynsE88ovEde5b2swycOh9SlAI8FL/cL2AkGGNnWADPXcX2UnPIJS2ozw=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="/css/blog.css">
    <script>
        !function (f, b, e, v, n, t, s) {
            if (f.fbq) return; n = f.fbq = function () {
                n.callMethod ?
                    n.callMethod.apply(n, arguments) : n.queue.push(arguments)
            };
            if (!f._fbq) f._fbq = n; n.push = n; n.loaded = !0; n.version = '2.0';
            n.queue = []; t = b.createElement(e); t.async = !0;
            t.src = v; s = b.getElementsByTagName(e)[0];
            s.parentNode.insertBefore(t, s)
        }(window, document, 'script',
            'https://connect.facebook.net/en_US/fbevents.js');
        fbq('init', '1007318860933777');
        fbq('track', 'PageView');
    </script>

    <!-- Google tag (gtag.js) -->
    <script>
        // Define dataLayer and the gtag function.
        window.dataLayer = window.dataLayer || [];
        function gtag() {
            dataLayer.push(arguments);
        }

        // Set default consent to 'denied' as a placeholder
        // Determine actual values based on your own requirements
        gtag("consent", "default", {
            ad_storage: "denied",
            ad_user_data: "denied",
            ad_personalization: "denied",
            analytics_storage: "denied",
            functionality_storage: "granted",
            personalization_storage: "granted",
            security_storage: "granted",
        });

        var allGranted = {
            ad_storage: "granted",
            ad_user_data: "granted",
            ad_personalization: "granted",
            analytics_storage: "granted",
            functionality_storage: "granted",
            personalization_storage: "granted",
            security_storage: "granted",
        };

        var essentialOnlyGranted = {
            ad_storage: "denied",
            ad_user_data: "denied",
            ad_personalization: "denied",
            analytics_storage: "denied",
            functionality_storage: "granted",
            personalization_storage: "granted",
            security_storage: "granted",
        };

        if (readCookie("google-consent") != null)
            gtag("consent", "update", allGranted);
    </script>
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-FZVQLLDS0B"></script>
    <!-- Create one update function for each consent parameter -->

    <!-- Google Tag Manager -->
    <script>
        (function (w, d, s, l, i) {
            w[l] = w[l] || [];
            w[l].push({ "gtm.start": new Date().getTime(), event: "gtm.js" });
            var f = d.getElementsByTagName(s)[0],
                j = d.createElement(s),
                dl = l != "dataLayer" ? "&l=" + l : "";
            j.async = true;
            j.src = "https://www.googletagmanager.com/gtm.js?id=" + i + dl;
            f.parentNode.insertBefore(j, f);
        })(window, document, "script", "dataLayer", "GTM-FZVQLLDS0B");
    </script>
    <!-- End Google Tag Manager -->
    <style>
        #editor-container {
            height: 200px;
            width: 100%;
            border: 1px solid black;
        }

        .ql-toolbar.ql-snow {
            width: 100%;
        }

        .ql-editor {
            width: 100% !important;
        }
    </style>
</head>

<body>
    <div class="main-page upformp">
        <h1>Upload Blog</h1>
        <form id="blogForm" action="/upload-blog" method="POST" enctype="multipart/form-data">
            <div>
                <label for="authorName">Author Name:</label>
                <input type="text" id="authorName" name="authorName" required>
            </div>
            <div>
                <label for="authorEmail">Author Email:</label>
                <input style="height: 2.5vw;width: 100%;" type="email" id="authorEmail" name="authorEmail" required>
            </div>
            <div>
                <label for="blogTitle">Blog Title:</label>
                <input type="text" id="blogTitle" name="blogTitle" required>
            </div>
            <div>
                <label for="blogShortDesc">Blog Short Description:</label>
                <textarea id="blogShortDesc" name="blogShortDesc" required></textarea>
            </div>
            <div>
                <label for="blogBannerImage">Blog Banner Image: (Banner size: 1920 X 500 px)</label>
                <input type="file" id="blogBannerImage" name="blogBannerImage" accept="image/*" required>
            </div>
            <div>
                <label for="showImg">Image to show:</label>
                <input type="file" id="showImg" name="showImg" accept="image/*" required>
            </div>
            <div>
                <label for="heading1">Heading 1:</label>
                <input type="text" name="headings" required>
            </div>
            <div>
                <label for="paragraph1">Paragraph 1: (max word limit: 150 words)</label>
                <textarea name="paragraphs" required></textarea>
            </div>
            <div>
                <label for="image1">Image 1:</label>
                <input type="file" name="images" accept="image/*">
            </div>
            <div>
                <label for="heading2">Heading 2:</label>
                <input type="text" name="headings" required>
            </div>
            <div>
                <label for="paragraph2">Paragraph 2: (max word limit: 150 words)</label>
                <textarea name="paragraphs" required></textarea>
            </div>
            <div>
                <label for="image2">Image 2:</label>
                <input type="file" name="images" accept="image/*">
            </div>
            <div>
                <label for="metaTitle">Meta Title:</label>
                <input type="text" id="metaTitle" name="metaTitle" required>
            </div>
            <div>
                <label for="canonical"> Canonical </label>
                <input type="text" id="canonical" name="canonical" required>
            </div>
            <div>
                <label for="metaKeywords">Meta Keywords (comma-separated):</label>
                <input type="text" id="metaKeywords" name="metaKeywords" required>
            </div>
            <div style="width: 90%;">
                <label for="metaDescription">Meta Description:</label>
                <textarea id="metaDescription" name="metaDescription" required></textarea>
            </div>
            <div id="editor-container"></div>
            <input type="hidden" name="contentText" id="hidden-input">
            <div class="btndiv"><button type="submit">Upload Blog</button></div>
        </form>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/quill/2.0.2/quill.js"
        integrity="sha512-xI6PxAo086hcXuoe6wbMclXWZmpALq7bnMJGt8inaK17s4dyhCrzKvXNq/je7vc5hfmovWZGYlYPxSui6opB1g=="
        crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script>


        document.addEventListener('DOMContentLoaded', function () {
            var quill = new Quill('#editor-container', {
                theme: 'snow',
                modules: {
                    toolbar: [
                        [{ 'header': [1, 2, 3, 4, 5, 6, false] }],
                        ['bold', 'italic', 'underline'],
                        ['blockquote', 'code-block'],
                        [{ 'list': 'ordered' }, { 'list': 'bullet' }],
                        [{ 'script': 'sub' }, { 'script': 'super' }],
                        [{ 'indent': '-1' }, { 'indent': '+1' }],
                        [{ 'direction': 'rtl' }],
                        [{ 'color': [] }, { 'background': [] }],
                        [{ 'font': [] }],
                        [{ 'align': [] }],
                        ['link', 'image', 'video'],
                        ['clean']
                    ]
                }
            });

            // Custom link handler
            var linkHandler = function (value) {
                if (value) {
                    var href = prompt('Enter the URL');
                    if (href) {
                        // Ensure the URL is absolute
                        if (!href.match(/^https?:\/\//i)) {
                            if (href.startsWith('www.')) {
                                href = 'https://' + href;
                            } else {
                                href = 'https://' + href;
                            }
                        }

                        this.quill.format('link', href, 'user');

                        // Set the link to open in a new tab
                        var selection = this.quill.getSelection();
                        if (selection) {
                            this.quill.formatText(selection.index, selection.length, {
                                'link': href,
                                'target': '_blank'
                            });
                        }
                    }
                } else {
                    this.quill.format('link', false);
                }
            };

            // Override Quill's default link handler
            quill.getModule('toolbar').addHandler('link', linkHandler);

            var form = document.getElementById('blogForm');
            form.onsubmit = function (e) {
                e.preventDefault();  // Prevent default form submission
                var contentText = document.querySelector('input[name=contentText]');
                var processedContent = processQuillContent(quill.root.innerHTML);
                contentText.value = processedContent;
                this.submit();  // Submit the form
            };

            const paragraphTextareas = document.querySelectorAll('textarea[name="paragraphs"]');
            const maxWords = 150;

            paragraphTextareas.forEach((textarea) => {
                textarea.addEventListener('input', () => {
                    enforceWordLimit(textarea, maxWords);
                });
            });

            function processQuillContent(content) {
                var tempDiv = document.createElement('div');
                tempDiv.innerHTML = content;

                // Process all links
                var links = tempDiv.getElementsByTagName('a');
                for (var i = 0; i < links.length; i++) {
                    links[i].setAttribute('target', '_blank');
                    links[i].setAttribute('rel', 'noopener noreferrer');

                    // Extract the href
                    var href = links[i].getAttribute('href');

                    // Check if it's a relative URL (doesn't start with http:// or https://)
                    if (href && !href.match(/^https?:\/\//i)) {
                        // If it's www, add https://
                        if (href.startsWith('www.')) {
                            href = 'https://' + href;
                        } else {
                            // For other cases, you might want to handle differently
                            // For now, we'll assume it's meant to be an absolute URL
                            href = 'https://' + href;
                        }

                        // Set the corrected href
                        links[i].setAttribute('href', href);
                    }
                }

                return tempDiv.innerHTML;
            }

            function enforceWordLimit(textarea, maxWords) {
                const value = textarea.value.trim().replace(/\s+/g, ' ');
                const words = value.split(' ').filter(word => word !== '');

                if (words.length > maxWords) {
                    const allowedWords = words.slice(0, maxWords).join(' ');
                    textarea.value = allowedWords;
                }
            }
        });
    </script>

</body>

</html>