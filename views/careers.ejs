<% layout("/layouts/boilerplate") %>
    <style>
        .bl {
            background-color: black;
        }
    </style>

    <body>
        <div class="career-container">
            <div class="filter-sidebar">
                <h2>Filters</h2>

                <div class="filters">
                    <div class="filter-dropdown" data-filter="location">
                        <div class="filter-option">Locations <span>▼</span></div>
                        <% const uniqueLocations=new Set(); jobs.forEach(job=> {
                            uniqueLocations.add(job.location);
                            });
                            %>

                            <div class="filter-content">
                                <a href="#" data-value="all">All locations</a>
                                <% uniqueLocations.forEach(location=> { %>
                                    <a href="#" data-value="<%= location %>">
                                        <%= location %>
                                    </a>
                                    <% }) %>
                            </div>

                    </div>

                    <div class="filter-dropdown" data-filter="experience">
                        <div class="filter-option">Experience <span>▼</span></div>
                        <div class="filter-content">
                            <a href="#" data-value="all">All levels</a>
                            <a href="#" data-value="entry">Entry level</a>
                            <a href="#" data-value="mid">Mid level</a>
                            <a href="#" data-value="senior">Senior level</a>
                        </div>
                    </div>


                    <div class="filter-dropdown" data-filter="jobType">
                        <div class="filter-option">Job Type <span>▼</span></div>
                        <div class="filter-content">
                            <a href="#" data-value="all">All types</a>
                            <a href="#" data-value="full time">Full Time</a>
                            <a href="#" data-value="part time">Part Time</a>
                            <a href="#" data-value="contract">Contract</a>
                        </div>
                    </div>



                    <div class="filter-dropdown" data-filter="sortBy">
                        <div class="filter-option">Sort by <span>▼</span></div>
                        <div class="filter-content">

                            <a href="#" data-value="date">Date posted</a>

                        </div>
                    </div>

                    <div class="selected-filters">
                        <!-- Selected filters will be dynamically added here -->
                    </div>
                </div>
            </div>
            <div class="main-content">

                <div class="top-bar">
                    <div class="job-count"><span id="job-count">2,558</span> jobs matched</div>
                    <button class="clear-filters">Clear filters</button>
                    <div class="job-alerts">
                        Turn on job alerts for this search
                        <label class="toggle-switch">
                            <input type="checkbox">
                            <span class="career-slider"></span>
                        </label>
                    </div>
                </div>
                <input type="text" class="search-bar"
                    placeholder="Search via Job Name / skills / location / salary / experience (Mid / senior/ Entry Level)"
                    id="search-input">

                <div id="job-listings">
                    <% jobs.forEach(job=> { %>

                        <div class="job-card" data-skills="<%= job.skills %>">
                            <h3 class="jtitle">
                                <%= job.title %>
                            </h3>
                            <div class="job-details">
                                <div> <img src="/assets/images/job-p.png" alt="company"> Shashi sales and marketing
                                </div>
                                <div><img src="/assets/images/job-l.png" alt="job location">
                                    <%= job.location %>
                                </div>
                                <div> <img src="/assets/images/job-le.png" alt="job level">
                                    <%= job.experience %>
                                </div>
                                <div> <img src="/assets/images/job-le.png" alt="job level">
                                    <%= job.jobType %>
                                </div>

                            </div>
                            <% if (job.qualifications && job.qualifications.length> 0 &&
                                job.qualifications.some(qualification => qualification.trim() !== '')) { %>
                                <div class="job-qualifications">
                                    <strong>Minimum qualifications:</strong>
                                    <ul>
                                        <% job.qualifications.forEach(qualification=> { %>
                                            <% if (qualification.trim() !=='' ) { %>

                                               <%- qualification %>
                                                <% } %>
                                                    <% }) %>
                                    </ul>
                                </div>
                                <% } %>

                                    <% if (job.skills && job.skills.trim() !=="" ) { %>
                                        <div class="job-skills" style="margin-top: 1rem;">
                                            <p><strong style="color: black;">Skills: </strong>
                                                <%= job.skills %>
                                            </p>
                                        </div>
                                        <% } %>


                                            <div class="action-buttons">
                                                <a href="/careers/<%= job._id %>" class="learn-more">Learn more</a>
                                                <div class="share-icon">
                                                    <button class="action-button share-btn">Share</button>
                                                    <img src="/assets/images/share.svg" alt="share">
                                                </div>

                                                <div class="share-options" style="display: none; margin-top: 5px;">
                                                    <div class="share-option" data-action="copy"> <img width="70px"
                                                            src="/assets/images/resume.png" alt="">Copy link</div>
                                                    <div class="share-option" data-action="email"> <img width="70px"
                                                            src="/assets/images/re-mail.png" alt=""> Email a friend
                                                    </div>
                                                </div>
                                            </div>
                        </div>

                        <% }) %>
                </div>
            </div>
        </div>

        <script>
            document.addEventListener('DOMContentLoaded', function () {
                const filterDropdowns = document.querySelectorAll('.filter-dropdown');
                const selectedFiltersContainer = document.querySelector('.selected-filters');
                const clearFiltersButton = document.querySelector('.clear-filters');
                const searchInput = document.getElementById('search-input');
                const jobListings = document.getElementById('job-listings');
                const jobCountElement = document.getElementById('job-count');
                const allJobCards = Array.from(jobListings.querySelectorAll('.job-card'));
                const selectedFilters = {};

                function toggleDropdown(dropdown) {
                    const content = dropdown.querySelector('.filter-content');
                    content.classList.toggle('show');
                }

                function closeAllDropdowns() {
                    document.querySelectorAll('.filter-content').forEach(content => {
                        content.classList.remove('show');
                    });
                }

                function updateSelectedFilters(filterType, value, text) {
                    // Remove existing filter for this type
                    if (selectedFilters[filterType]) {
                        removeFilterTag(filterType, selectedFilters[filterType]);
                    }

                    // Update with new filter
                    selectedFilters[filterType] = value;
                    addFilterTag(filterType, value, text);
                    updateJobListings();
                }

                function addFilterTag(filterType, value, text) {
                    const tag = document.createElement('div');
                    tag.classList.add('selected-filter');
                    tag.innerHTML = `${text} <span class="remove-filter" data-filter="${filterType}" data-value="${value}">✕</span>`;
                    selectedFiltersContainer.appendChild(tag);
                }

                function removeFilterTag(filterType, value) {
                    delete selectedFilters[filterType];
                    const tag = selectedFiltersContainer.querySelector(`[data-filter="${filterType}"][data-value="${value}"]`).parentNode;
                    tag.remove();
                    updateJobListings();
                }

                function clearAllFilters() {
                    selectedFiltersContainer.innerHTML = '';
                    Object.keys(selectedFilters).forEach(key => {
                        delete selectedFilters[key];
                    });
                    searchInput.value = '';
                    document.querySelectorAll('.filter-content a').forEach(a => {
                        a.classList.remove('selected');
                    });
                    updateJobListings();
                }

                function updateJobListings() {
                    const searchTerm = searchInput.value.toLowerCase();
                    let visibleCount = 0;

                    allJobCards.forEach(jobCard => {
                        const title = jobCard.querySelector('.jtitle').textContent.toLowerCase();
                        const location = jobCard.querySelector('.job-details div:nth-child(2)').textContent.toLowerCase();
                        const experience = jobCard.querySelector('.job-details div:nth-child(3)').textContent.toLowerCase();
                        const jobType = jobCard.querySelector('.job-details div:nth-child(4)').textContent.trim().toLowerCase(); const skills = jobCard.dataset.skills ? jobCard.dataset.skills.toLowerCase().split(',') : [];
                        const datePosted = new Date(jobCard.dataset.datePosted);

                        const matchesFilters = Object.entries(selectedFilters).every(([filterType, value]) => {
                            if (!value || value === 'all') return true;
                            switch (filterType) {
                                case 'location':
                                    return location.includes(value.toLowerCase());
                                case 'experience':
                                    return experience.includes(value.toLowerCase());
                                case 'jobType':
                                    return jobType === value.toLowerCase();
                                case 'sortBy':
                                    return true; // We'll handle sorting separately
                                default:
                                    return true;
                            }
                        });

                        const matchesSearch =
                            title.includes(searchTerm) ||
                            location.includes(searchTerm) ||
                            experience.includes(searchTerm) ||
                            jobType.includes(searchTerm) ||
                            skills.some(skill => skill.trim().includes(searchTerm));

                        if (matchesFilters && matchesSearch) {
                            jobCard.style.display = '';
                            visibleCount++;
                        } else {
                            jobCard.style.display = 'none';
                        }
                    });

                    updateJobCount(visibleCount);

                    // Sort by date posted if selected
                    if (selectedFilters.sortBy === 'date') {
                        const sortedCards = allJobCards
                            .filter(card => card.style.display !== 'none')
                            .sort((a, b) => {
                                return new Date(b.dataset.datePosted) - new Date(a.dataset.datePosted);
                            });
                        sortedCards.forEach(card => jobListings.appendChild(card));
                    }
                }
                function updateJobCount(count) {
                    jobCountElement.textContent = count;
                }

                filterDropdowns.forEach(dropdown => {
                    const option = dropdown.querySelector('.filter-option');
                    const content = dropdown.querySelector('.filter-content');

                    option.addEventListener('click', (e) => {
                        e.stopPropagation();
                        closeAllDropdowns();
                        toggleDropdown(dropdown);
                    });

                    content.addEventListener('click', (e) => {
                        if (e.target.tagName === 'A') {
                            e.preventDefault();
                            const filterType = dropdown.dataset.filter;
                            const value = e.target.dataset.value;
                            const text = e.target.textContent;
                            updateSelectedFilters(filterType, value, text);
                            content.querySelectorAll('a').forEach(a => a.classList.remove('selected'));
                            e.target.classList.add('selected');
                            toggleDropdown(dropdown);
                        }
                    });
                });

                document.addEventListener('click', (e) => {
                    if (!e.target.closest('.filter-dropdown')) {
                        closeAllDropdowns();
                    }
                });

                selectedFiltersContainer.addEventListener('click', (e) => {
                    if (e.target.classList.contains('remove-filter')) {
                        const filterType = e.target.dataset.filter;
                        const value = e.target.dataset.value;
                        removeFilterTag(filterType, value);
                    }
                });

                clearFiltersButton.addEventListener('click', clearAllFilters);

                searchInput.addEventListener('input', updateJobListings);

                // Share functionality
                jobListings.addEventListener('click', (e) => {
                    const shareBtn = e.target.closest('.share-btn');
                    if (shareBtn) {
                        e.stopPropagation();

                        const jobCard = shareBtn.closest('.job-card');
                        const shareOptions = jobCard.querySelector('.share-options');
                        const learnMoreLink = jobCard.querySelector('.learn-more').getAttribute('href');

                        document.querySelectorAll('.share-options').forEach(options => {
                            if (options !== shareOptions) {
                                options.style.display = 'none';
                            }
                        });

                        shareOptions.style.display = shareOptions.style.display === 'flex' ? 'none' : 'flex';

                        const shareOptionButtons = shareOptions.querySelectorAll('.share-option');
                        shareOptionButtons.forEach(button => {
                            button.addEventListener('click', (e) => {
                                e.stopPropagation();
                                const action = button.getAttribute('data-action');
                                const jobUrl = `${window.location.origin}${learnMoreLink}`;

                                if (action === 'copy') {
                                    navigator.clipboard.writeText(jobUrl).then(() => {
                                        alert('Job link copied to clipboard!');
                                    }).catch(err => {
                                        console.error('Failed to copy: ', err);
                                    });
                                } else if (action === 'email') {
                                    const subject = encodeURIComponent('Check out this job');
                                    const body = encodeURIComponent(`I found this interesting job: ${jobUrl}`);
                                    window.location.href = `mailto:?subject=${subject}&body=${body}`;
                                }

                                shareOptions.style.display = 'none';
                            });
                        });
                    }
                });

                // Close all share options when clicking outside
                document.addEventListener('click', () => {
                    document.querySelectorAll('.share-options').forEach(options => {
                        options.style.display = 'none';
                    });
                });

                // Initialize job count
                updateJobCount(allJobCards.length);
            });
        </script>

    </body>